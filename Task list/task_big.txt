Написать чат-инфраструктуру.
На компьюетре, исполняющем роль сервера, запущено две службы (два сервера): служба регистрации (5555 порт) и служба чата (6666) порт.

Реализация службы регистрации (5 баллов):
При подключении клиента служба просит его ввести свой логин, не превышающий 50 символов и не содержащий пробелы (если логин не удовлетворяет требованиям, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается; если такой логин уже есть в файле регистрации пользователей, который хранится на сервере, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). После клиента просят ввести пароль, не превышающий 50 символов и не содержащий пробелы (если пароль не удовлетворяет требованиям, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). Служба вычислет хэш от данного пароля и сохраняет пару логин:хэш_пароля в файле регистрации. Служба регистрации способна одновременно обрабатывать несколько подключенных клиентов.

Первый вариант реализации службы чата (10 баллов):
При подключении клиента просят ввести логин (если пользователь с таким логином отсутствует в файле регистрации или уже зашёл в чат, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). После клиента просят ввести пароль (если хэш пароля не совпадает с хэшем из файла регистрации, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). При успешной регистрации пользователь попадает в общую чат-комнату и может отправлять сообщения. При отправке сообщения всем пользователям (включая отправившего) приходит сообщение следующего вида 
login: message.
Служба чата способна одновременно обрабатывать несколько подключенных клиентов.

Второй вариант реализации службы чата (40 баллов):
При подключении клиента просят ввести логин (если пользователь с таким логином отсутствует в файле регистрации или уже зашёл в чат, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). После клиента просят ввести пароль (если хэш пароля не совпадает с хэшем из файла регистрации, клиенту отправляется соответсвующее сообщение и работа с клиентом завершается). При успешной регистрации пользователю предлагается ввести одну из следующих команд:
1. list - выводит список всех пользователей, зашедших в данный чат;
2. whitelist - выводит список пользователей, общение с котроми возможно (то есть всех пользователей, кроме входящих в "чёрный список" данного пользователя и добавивших данного пользователя в свой "чёрный список");
3. blacklist - выводит "чёрный список" данного пользователя;
4. block <username> - добавляет пользователя в "чёрный список";
5. unblock <username> - убирает пользователя из "чёрного списка";
6. chat <username> - начать чат с пользователем username.
Черный список для каждого пользователя должен храниться на сервере и действовать при повторном подключении к чату (например, можно создать пустой файл для каждого пользователя при регистрации и каждый раз обновлять его содержимое).
Если команда была введена некорректно, то выводится сообщение об этом (например, введен логин несуществующего пользователя).
Если пользователю от другого пользователя был отправлен запрос на начало чата, то ему приходит сообщение вида "User <username> wants to start chat with you. Start chat?". Если пользователь отвечает "yes", то начинается общение между данными пользователями. Если пользователь отвечает "no", то пославшему запрос на чат пользователю приходит сообщение об этом.
Общение проходит аналогично общению в первом варианте службы (только между двумя пользователями вместо многих).
Служба чата способна одновременно обрабатывать несколько подключенных клиентов.

Дополнительный функционал (5 баллов):
Каждая из служб ведёт свой лог. 
Служба регистрации дописывает в свой файл сообщения о всех подключениях (дата, время, ip-адрес) и о всех новых зарегистрированных пользователях (дата, время, ip-адрес, логин).
Служба чата дописывает в свой файл сообщения о всех подключениях (дата, время, ip-адрес), о всех успешно вошедших пользователях (дата, время, ip-адрес, логин), а также время выхода пользователя (дата, время, ip-адрес, логин).


В качестве проверки работы служб удобнее всего использовать утилиту netcat (версию для Windows можно скачать здесь https://eternallybored.org/misc/netcat/).
Данные о регистрации и чёрные списки можно хранить в текстовых файлах (.txt). Если вы реализуете хранение с помощью базы данных и реализуете работу с БД, то получите дополнительно 10 баллов.
После завершения работы с сервисом регистрации клиент сам подключается к сервису чата. Автоматический переход к чату после регистрации не нужен.